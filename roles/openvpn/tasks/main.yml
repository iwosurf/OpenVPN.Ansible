#OpenVPNServer and easy-rsa package install
- name: install openvpn and easy-rsa
  apt:
    name: "{{ item }}"
    install-recommends: no
    state: present
  with_items:
    - openvpn
    - easy-rsa

#copy easy-rsa template directory into our openvpn directory
- name: create easy-rsa dir
  command: make-cadir /etc/openvpn/openvpn-ca
  args:
    creates: /etc/openvpn/openvpn-ca

- name: configure the CA Variables
  template:
    src: "{{ item.src }}"
    dest: /etc/openvpn/openvpn-ca/{{ item.dest }}
  with_items:
    - src: vars
      dest: vars
  tags:
    - configuration

#openvpn config files
- name: put config files
  template: src={{ item.file }} dest=/etc/openvpn/openvpn-ca mode={{ item.mode }}
  with_items:
    - { file: vars         , mode: 644 }
    - { file: message.txt  , mode: 644 }
    - { file: server.conf  , mode: 644 }
    - { file: client.ovpn  , mode: 644 }
    - { file: create.client.config.sh        , mode: 777 }
    - { file: up.sh        , mode: 755 }
    - { file: down.sh      , mode: 755 }
  tags:
    - vpn

#openvpn server certificate
- name: generate keys
  shell: bash -c "source vars && {{ item.rcmd }}"
  #"
  args:
      chdir:   "/etc/openvpn/openvpn-ca/"
      creates: "/etc/openvpn/openvpn-ca/keys/{{ item.out }}"
  with_items:
      - { rcmd: ./clean-all                           , out: 'index.txt' }
      - { rcmd: ./build-dh                            , out: 'dh2048.pem' }
      - { rcmd: ./pkitool --initca                    , out: 'ca.crt'     }
      - { rcmd: ./pkitool --server server             , out: 'server.csr' }
      - { rcmd: openvpn --genkey --secret keys/ta.key , out: 'ta.key'     }
  tags:
      - vpn

#openvpn server configuration
- name: openvpn server configuration
  template:
    src: "{{ item.src }}"
    dest: /etc/openvpn/{{ item.dest }}
  with_items:
    - src: server.conf
      dest: server.conf
  tags:
    - configuration

#Allow IP Forwarding
- name: Allow forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
  tags:
    - network

- name: Allow ufw forwarding by default
  lineinfile:
    path: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'
  notify:
    - reload ufw
  tags:
    - ufw

- name: Allow openvpn through firewall
  ufw:
    rule: allow
    proto: "{{ openvpn_proto }}"
    port: "{{ openvpn_port }}"
  notify:
    - reload ufw
  tags:
    - ufw

- name: start openvpn server
  become: true
  become_user: root
  shell: systemctl start openvpn@server

- name: start openvpn automatically at boot
  become: true
  become_user: root
  shell: systemctl enable openvpn@server

#create openvpn client certificate
- name: Execute the script
  become: yes
  command: /etc/openvpn/openvpn-ca/create.client.config.sh ./
